using NUnit.Framework;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace TestApp.Tests;

public class CountRealNumbersTests
{
    // TODO: finish test
    [Test]
    public void Test_Count_WithEmptyArray_ShouldReturnEmptyString()
    {
        // Arrange
        int[] input = new int[]{};

        // Act
        string result = CountRealNumbers.Count(input);

        // Assert
        Assert.That(result, Is.Empty);
    }

    [Test]
    public void Test_Count_WithSingleNumber_ShouldReturnCountString()
    {
        // Arrange
        int[] input = new int[]{5};

        // Act
        
        string result = CountRealNumbers.Count(input);
        
        // Assert
        Assert.That(result, Is.EqualTo("5 -> 1"));
    }

    [Test]
    public void Test_Count_WithMultipleNumbers_ShouldReturnCountString()
    {
        // Arrange
        int[] input = new int[] {7, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4};

        // Act

        string result = CountRealNumbers.Count(input);

        // Assert
        Assert.That(result, Is.EqualTo("2 -> 3\r\n3 -> 4\r\n4 -> 6\r\n7 -> 1"));
    }

    [Test]
    public void Test_Count_WithNegativeNumbers_ShouldReturnCountString()
    {
        // Arrange
        int[] input = new int[] { -2, -2, -2, -3, -3, -3, -3, -4, -4, -4, -4, -4, -4 };

        // Act

        string result = CountRealNumbers.Count(input);

        // Assert
        Assert.That(result, Is.EqualTo("-4 -> 6\r\n-3 -> 4\r\n-2 -> 3"));
    }

    [Test]
    public void Test_Count_WithZero_ShouldReturnCountString()
    {
        int[] input = new int[] { 0 };

        // Act

        string result = CountRealNumbers.Count(input);

        // Assert
        Assert.That(result, Is.EqualTo("0 -> 1"));
    }



}
