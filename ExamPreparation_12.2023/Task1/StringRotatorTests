using NUnit.Framework;

namespace TestApp.Tests;

[TestFixture]
public class StringRotatorTests
{
    [Test]
    public void Test_RotateRight_EmptyString_ReturnsEmptyString()
    {
        // Arrange
        string wordToRotate = "";
        int count = 0;

        // Act
        string result = StringRotator.RotateRight(wordToRotate, count);

        // Assert
        Assert.AreEqual(wordToRotate, result);
    }

    [Test]
    public void Test_RotateRight_RotateByZeroPositions_ReturnsOriginalString()
    {
        // Arrange
        string wordToRotate = "Hello";
        int count = 0;

        // Act
        string result = StringRotator.RotateRight(wordToRotate, count);

        // Assert
        Assert.AreEqual(wordToRotate, result);
    }

    [Test]
    public void Test_RotateRight_RotateByPositivePositions_ReturnsRotatedString()
    {
        // Arrange
        string wordToRotate = "abcdef";
        int count = 2;

        // Act
        string result = StringRotator.RotateRight(wordToRotate, count);

        // Assert
        Assert.AreEqual("efabcd", result);
    }

    [Test]
    public void Test_RotateRight_RotateByNegativePositions_ReturnsRotatedString()
    {
        // Arrange
        string wordToRotate = "12345";
        int count = -2;

        // Act
        string result = StringRotator.RotateRight(wordToRotate, count);

        // Assert
        Assert.AreEqual("45123", result);
    }

    [Test]
    public void Test_RotateRight_RotateByMorePositionsThanStringLength_ReturnsRotatedString()
    {
        // Arrange
        string wordToRotate = "xyz";
        int count = 5;

        // Act
        string result = StringRotator.RotateRight(wordToRotate, count);

        // Assert
        Assert.AreEqual("yzx", result);
    }
}
